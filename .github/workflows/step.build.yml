name: Build

on:
  workflow_call:
    inputs:
      versionNumber:
        description: "Version Number (ie 5.5.0)"
        required: true
        type: string
      dryRun:
        description: "Dry Run"
        type: boolean
        required: false
        default: false

permissions:
  contents: write

jobs:
  unit:
    name: Unit Test
    runs-on: ubuntu-latest
    env:
      SDF_CLI_VERSION: ${{ github.event.inputs.versionNumber }}

    steps:
      - name: "Checkout ${{ github.repository }} Commit"
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: "Install Python Dependencies"
        run: |
          python -m pip install --user --upgrade pip
          python -m pip install pytest
          python -m pip --version

      - name: "Run Tox"
        run: pytest

  build-packages:
    runs-on: ubuntu-latest
    needs: [unit]

    outputs:
      finished: ${{ steps.set_success.outputs.finished }}

    steps:
      - name: "Checkout ${{ github.repository }} Commit"
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: "Install Python Dependencies"
        run: |
          python -m pip install --user --upgrade pip
          python -m pip install --upgrade setuptools twine
          python -m pip --version

      - name: "Build Distributions"
        run: python setup.py sdist

      - name: "[DEBUG] Show Distributions"
        run: ls -lh dist/

      - name: "Check Distribution Descriptions"
        run: |
          twine check dist/*

      - name: "Upload Build Artifact - ${{ inputs.versionNumber }}"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.versionNumber }}
          path: |
            ${{ inputs.changelog_path }}
            ./dist/
            !dist/sdf_cli-${{ inputs.versionNumber }}.tar.gz
          retention-days: 1

  test-build:
    runs-on: ubuntu-latest
    needs: [build-packages]

    steps:
      - name: "Set up Python - ${{ env.PYTHON_TARGET_VERSION }}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_TARGET_VERSION }}

      - name: "Install Python Dependencies"
        run: |
          python -m pip install --user --upgrade pip
          python -m pip install --upgrade wheel
          python -m pip --version

      - name: "Download Build Artifact - ${{ inputs.version_number }}"
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.versionNumber }}
          path: .

      - name: "[DEBUG] Display Structure Of All Downloaded Files"
        run: ls -R

      - name: "[DEBUG] Show Distributions"
        run: ls -lh dist/

      - name: "Install Source Distributions"
        run: |
          find ./dist/*.gz -maxdepth 1 -type f | xargs python -m pip install --force-reinstall --find-links=dist/

      - name: "[DEBUG] Check Source Distributions"
        run: |
          sdf --version
